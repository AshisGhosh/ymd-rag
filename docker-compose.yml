version: '3.8'

services:
  backend:
    image: backend
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /home/peanut/.cache/huggingface:/root/.cache/huggingface
    command: poetry run uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - weaviate

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
  
  process_data:
    image: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
      - /home/peanut/.cache/huggingface:/root/.cache/huggingface
    command: poetry run python -u -m data.process_data
    profiles: [process_data]
  
  generate_datasource:
    image: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
      - /home/peanut/.cache/huggingface:/root/.cache/huggingface
    command: poetry run python -u -m app.engine.generate
    profiles: [generate]
    depends_on:
      - weaviate
  
  evaluate:
    image: backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app
      - /home/peanut/.cache/huggingface:/root/.cache/huggingface
    command: poetry run python -u -m app.engine.evaluate
    profiles: [evaluate]
    depends_on:
      - weaviate

  weaviate:
    command:
    - --host
    - 0.0.0.0
    - --port
    - '8080'
    - --scheme
    - http
    image: cr.weaviate.io/semitechnologies/weaviate:latest
    ports:
    - 8080:8080
    - 50051:50051
    volumes:
    - ./backend/data/weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
  
  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - 11434:11434
  #   volumes:
  #     - ./ollama/ollama:/root/.ollama
  #   environment:
  #     OLLAMA_ORIGINS: "*"